package org.scau.lzk.auto;

import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;

public class MainScene1 extends Scene{
	public int COUNT=8;
    public Button start_all_btn=new Button("一键启动");
    public Button stop_all_btn=new Button("一键中止");
    public Button[] start_btn=new Button[COUNT];
    public Button[] stop_btn=new Button[COUNT];
    public Label[] tip1=new Label[COUNT];
    private String host1="52.80.105.132";
    private int port1=5999;
    private String host2="52-80-248-129.ip.igotgames.net";
    private int port2=5991;
    Pane root;
    public double width;
    public double height;
    
    public ReceiveThread21[] th1=new ReceiveThread21[COUNT];
    public ReceiveThread22[] th2=new ReceiveThread22[COUNT];
    public Socket[] socket1=new Socket[COUNT];
    public Socket[] socket2=new Socket[COUNT];
    public String[] accountNameForEnglish={"xiaohao","lingmeng","taizhe","liangshi","shitou","tiekuang","mutou","other"};
    public String[] accountNameForZh={"小号","灵梦","太者","粮食","石头","铁矿","木头","其他"};
    public MainScene1(Pane root, double width, double height) throws IOException{
		super(root, width, height);
		 this.root=root;
		 this.width=width;
		 this.height=height;
		 
		 start_all_btn.setLayoutX(2);
		 start_all_btn.setLayoutY(2);
		 
		 stop_all_btn.setDisable(true);
		 stop_all_btn.setLayoutX(80);
		 stop_all_btn.setLayoutY(2);
		 
		 start_all_btn.setOnAction(event->{
			 try {
				start_all();
			} catch (Exception e1){
				 System.err.println("E:"+e1);
			}
		 });
		 
		 stop_all_btn.setOnAction(event->{
		     try {
				stop_all();
			} catch (IOException e) {
				 System.err.println("E:"+e);
			}	 
		 });
		 

			
		 for(int i=0;i<COUNT;i++){
			 start_btn[i]=new Button("启动");
			 stop_btn[i]=new Button("终止");
			 Label tip=new Label();
			 
			 tip.setText(accountNameForZh[i]);
			 tip.setLayoutX(12);
			 tip.setLayoutY(37+30*i);
			 tip.setFont(new Font(15));
			 
			 tip1[i]=new Label("关闭");
		     tip1[i].setText("关闭");
		     tip1[i].setLayoutX(250);
		     tip1[i].setLayoutY(40+30*i);
		     
		     start_btn[i].setLayoutX(60);
		     start_btn[i].setLayoutY(35+30*i);
		     start_btn[i].setMinWidth(70);
		     
		     stop_btn[i].setLayoutX(150);
		     stop_btn[i].setLayoutY(35+30*i);
		     stop_btn[i].setDisable(true);
		     stop_btn[i].setMinWidth(70);
		     
		     final int id=i;
		     start_btn[i].setOnAction(event->{
		    	try {
					start(id);
				} catch (UnknownHostException e) {
					 System.out.println("E:"+e);
				} catch (IOException e) {
					System.out.println("E:"+e);
				} 
		     });
		     
		     stop_btn[i].setOnAction(event->{
		    	try {
					stop(id);
				} catch (IOException e) {
					System.out.println("E:"+e);
				} 
		     });
		     
		     tip.setTextFill(Color.BROWN);
		     tip1[i].setTextFill(Color.RED);
		     
			 root.getChildren().addAll(start_btn[i],stop_btn[i],tip,tip1[i]);
		 }
		 
		 root.getChildren().addAll(start_all_btn,stop_all_btn);
		 
	}
    public void start_all() throws InterruptedException, UnknownHostException, IOException{
    	 for(int i=0;i<COUNT;i++){
        	 socket1[i] = new Socket(host1, port1);
        	 socket2[i] = new Socket(host2,port2);
        	 th1[i]=new ReceiveThread21(socket1[i],this,"/1.txt",accountNameForEnglish[i],i);
        	 th1[i].start();
        	 th2[i]=new ReceiveThread22(socket2[i],this,new String[]{"/2.txt","/3.txt","/4.txt","/5.txt","/6.txt","/7.txt","/8.txt","/9.txt","/10.txt"},tip1[i],accountNameForEnglish[i],i);
        	 th2[i].start();
        	 start_btn[i].setDisable(true);
        	 stop_btn[i].setDisable(false);
    	 }
         
    }
    
    public void stop_all() throws IOException{
    	for(int i=0;i<COUNT;i++){
      	     start_btn[i].setDisable(false);
       	     stop_btn[i].setDisable(true);
       	     tip1[i].setText("关闭");
       	     tip1[i].setTextFill(Color.RED);
       	     if(socket1[i]!=null&&!socket1[i].isClosed()) socket1[i].close();
       	     if(socket2[i]!=null&&!socket2[i].isClosed()) socket2[i].close();
    	}
    }
    public void showOnTip(Label tip,String s){
    	tip.setText(s);
    	tip.setTextFill(Color.GREEN);
    }
	public void stop(int id) throws IOException {
 	     start_btn[id].setDisable(false);
   	     stop_btn[id].setDisable(true);
   	     tip1[id].setText("关闭");
   	     tip1[id].setTextFill(Color.RED);
   	     if(socket1[id]!=null&&!socket1[id].isClosed()) socket1[id].close();
   	     if(socket2[id]!=null&&!socket2[id].isClosed()) socket2[id].close();
	}
	public void start(int id) throws UnknownHostException, IOException{
   	 socket1[id] = new Socket(host1, port1);
   	 socket2[id] = new Socket(host2,port2);
   	 th1[id]=new ReceiveThread21(socket1[id],this,"/1.txt",accountNameForEnglish[id],id);
   	 th1[id].start();
   	 th2[id]=new ReceiveThread22(socket2[id],this,new String[]{"/2.txt","/3.txt","/4.txt","/5.txt","/6.txt","/7.txt","/8.txt","/9.txt","/10.txt"},tip1[id],accountNameForEnglish[id],id);
   	 th2[id].start();
   	 start_btn[id].setDisable(true);
   	 stop_btn[id].setDisable(false);
	}
}

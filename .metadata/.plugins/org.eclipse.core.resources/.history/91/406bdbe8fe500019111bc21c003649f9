%% @author Administrator
%% @doc @todo Add description to ch_sup.


-module(ch_sup).

%% ====================================================================
%% API functions
%% ====================================================================
-behaviour(supervisor).
-export([start_link/0]).
-export([init/1]).

%% ====================================================================
%% Internal functions
%% ====================================================================

%%  3. 重启策略
%% 
%% one_for_one
%% 
%% 假如一个进程终止了，仅仅这个进程会被重启
%% 
%% one_for_all
%% 
%% 假如一个进程停止了，所有其他子进程也要被停止，然后所有子进程，包括这个引发停止的子进程都被重启
%% 
%% rest_for_one
%% 
%% 假如一个进程停止了，它后面的子进程，也就是以启动顺序来说这个被终止的进程后面的子进程都将被停止，然后他们又被启动。

%%  4. 最大启动频率
%% 
%% 监督者有一个内建机制限制在给定的时间间隔里的重启次数，这由子进程启动规程中的两个参数值决定，MaxR和MaxT，它们定义在回调函数init中
%% 
%% init(...) -> {ok, {{RestartStrategy, MaxR, MaxT}, [ChildSpec, ...]}}.
%% 
%% 如果在时间MaxT里重启次数大于MaxR ，监督者进程就停止它所有子进程，然后再终止自己。
%% 
%% 当监督者进程终止了，那么更高级别的监督者要采取些动作，它或者重启被终止的监督者或者停止自己
%% 
%% 这个重启机制的目的是预防一个进程因某种原因频繁的终止，然后简单的重启。

start_link() -> 
	supervisor:start_link(ch_sup, []). 
%% one_for_one是重启策略
%%　1和60定义了最大重启频率
%% {ch3, …}是子规程
init(_Args) -> 
	{ok, {{one_for_one, 1, 60}, [{ch3, {ch3, start_link, []}, permanent, brutal_kill, worker, [ch3]}]}}.


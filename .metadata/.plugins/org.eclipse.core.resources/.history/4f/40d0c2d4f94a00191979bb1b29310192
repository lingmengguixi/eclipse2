%% @author Administrator
%% @doc @todo Add description to chatClient.


-module(chatClient).

%% ====================================================================
%% API functions
%% ====================================================================
-export([start/0]).
-include("head.hrl").

%% ====================================================================
%% Internal functions
%% ====================================================================

 
start()->
   connectNet().

connectNet()->
   case gen_tcp:connect("127.0.0.1", ?PORT, [binary,{packet,4}]) of
	    {ok,Socket}->
			io:format("find the server ok!~n"),
			UserReceive=spawn(fun()->startRecive(Socket) end),
			gen_tcp:controlling_process(Socket, UserReceive), 
			command(Socket);
	    Args->io:format("cannot connect the network!~ncause:~p~n",[Args])
   end.

command(Socket)->
	Command=io:get_line('>'),
	case Command of
		 "login\n" ->login;
		 "logout\n" ->logout;
		 "who\n"->who;
		 "to\n"->
			    S=io:get_line(':'),
			    gen_tcp:send("Socket", term_to_binary(S));
	     _->help
	end,
	command(Socket).

startRecive(Socket)->
	receive
		{tcp,Socket,List}->
			io:format("from server:~p~n",[List]),
			startRecive(Socket);
		{tcp_closed,Socket}->
			io:format("close~n")
	end.